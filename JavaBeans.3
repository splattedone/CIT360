/*
  Class/Bean 3 - "IntrospectionDemo"
  This is a completely optional portion of the code included to demonstrate introspection. Again all public, this is a support tool for the main bean. 
*/

// Show properties and events.
  import java.awt.*;
  import java.beans.*;
  
public class IntrospectorDemo {
  public static void main(String args[]) {
    try {
      Class<?> c = Class.forName("Colors");
      BeanInfo beanInfo = Introspector.getBeanInfo(c);
    
    //Since we've overridden the default PropertyDescriptor, this is our version that leaves out the sensitive details we don't want to share. Anything we choose to share is printed to the console.
    
      System.out.println("Properties:");
      PropertyDescriptor propertyDescriptor[] =
        beanInfo.getPropertyDescriptors();
      for(int i = 0; i < propertyDescriptor.length; i++) {
        System.out.println("\t" + propertyDescriptor[i].getName());
      }
      
    //We didn't override the event descriptors, so this portion will print out all of the events we're listening for. In the real world, it may be worth hiding the inputs you're watching for to make reverse engineering the code more difficult.
      System.out.println("Events:");
      EventSetDescriptor eventSetDescriptor[] =
        beanInfo.getEventSetDescriptors();
      for(int i = 0; i < eventSetDescriptor.length; i++) {
        System.out.println("\t" + eventSetDescriptor[i].getName());
    }
    }
    catch(Exception e) {
      System.out.println("Exception caught. " + e);
    }
  }
}


