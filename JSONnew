/*
JSON (JavaScript Object Notation) is an alternative to XML and is intended to help pass data from Java to APIs for use elsewhere. It’s open-sourced, can be used with a variety of programming languages, and (best of all) it’s human readable. It’s similar to Hibernate in that it lets Java interface with an outside program, however Hibernate it geared towards relational databases. 
    Because Hibernate is designed to interface with Java objects you’ll have to convert anything coming in via JSON into Java object first and then use Hibernate to dump it into your database. You’ll need to a few special JSON imports.
*/
package json;

import org.json.simple.JSONObject;


public class Json{

@SuppressWarnings("unchecked")
public static void main(String[] args) {
	
  --In this example, we're pushing a new player to the DB via JSON, notice each .put command is an attribute and a value.
	JSONObject baseball = new JSONObject();
	
	baseball.put("Player","Craig Biggio");
	baseball.put("Jersy Number","7");
	baseball.put("Position","Second Base");
	baseball.put("Team","Astros");
	baseball.put("City", "Houston");

	System.out.println(baseball);
	System.out.println(baseball.size());
	//Looking for the key "City" 
	System.out.println(baseball.containsKey("City"));
	//Since the Key is the left one it does not find Houston because Houston is a value.
	System.out.println(baseball.containsKey("Houston"));
	System.out.println();
	
	JSONObject football = new JSONObject();
	football.put("Team", "Texans");
	football.put("City","Houston");
	football.put("Division", "AFC South");
	
	System.out.println(football);
	
	System.out.println(football.size());
			
	
	
	
}

}
