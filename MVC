--Model
--The model portion controlls the state of the objects in the interface. Any changes to the objects themselves should be 
--housed here. This is the brain of the interface.  

  package mvctesting;

  public class Student {
     private String rollNo;
     private String name;

     public String getRollNo() {
        return rollNo;
     }

     public void setRollNo(String rollNo) {
        this.rollNo = rollNo;
     }

     public String getName() {
        return name;
     }

     public void setName(String name) {
        this.name = name;
     }
  }

--Controller
--Manages user interactions. If I click or scroll, or mouse over, or interact with this object at all the controller, well
--controls it. It directs the model to change the state of the object, setting and changing values. It also directs the View
--change the appearance of the objects as well. 

  package mvctesting;

  public class StudentController {
     private Student model;
     private StudentView view;

     public StudentController(Student model, StudentView view){
        this.model = model;
        this.view = view;
     }

     public void setStudentName(String name){
        model.setName(name);		
     }

     public String getStudentName(){
        return model.getName();		
     }

     public void setStudentRollNo(String rollNo){
        model.setRollNo(rollNo);		
     }

     public String getStudentRollNo(){
        return model.getRollNo();		
     }

     public void updateView(){				
        view.printStudentDetails(model.getName(), model.getRollNo());
     }	
  }

-- View
--Does just what it says, this portion should control the appearance of everything, the CSS of the interface. 


  package mvctesting;

  public class StudentView {
     public void printStudentDetails(String studentName, String studentRollNo){
        System.out.println("Student: ");
        System.out.println("Name: " + studentName);
        System.out.println("Roll No: " + studentRollNo);
     }
  }
