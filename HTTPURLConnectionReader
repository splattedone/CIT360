import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

import javax.net.ssl.HttpsURLConnection;

class ThisHereURLExample {
   public static void main(String args[]) {

      try {
      
       ExecutorService exec = Executors.newWorkStealingPool();
        
        exec.invokeAll(taskList).stream().map(future -> {
            try {
                return future.get(10,TimeUnit.SECONDS);
            } catch (Exception e) {
                throw new IllegalStateException(e);
            }
        }).forEach(System.out::println);
        
        try {
            exec.shutdown();
            exec.awaitTermination(15, TimeUnit.SECONDS);
        } catch (InterruptedException e) {
            System.err.println("Tasks interrupted");
        } finally {
            if (!exec.isTerminated()) {
                System.err.println("Tasks failed to close; cancelling forcefully.");
            }
            exec.shutdownNow();
        }
      }
      
          public class ThatThereURLExample {

            private final String USER_AGENT = "Mozilla/5.0";

            public static void main(String[] args) throws Exception {

              HttpURLConnectionExample http = new HttpURLConnectionExample();

              http.sendGet();

            }

            // HTTP GET request
            private void sendGet() throws Exception {

              String url = "http://www.google.com/search?q=what+does+lol+mean";

              URL obj = new URL(url);
              HttpURLConnection con = (HttpURLConnection) obj.openConnection();

              // optional default is GET
              con.setRequestMethod("GET");

              //add request header
              con.setRequestProperty("User-Agent", USER_AGENT);

              int responseCode = con.getResponseCode();
              System.out.println("\nSending 'GET' request to URL : " + url);
              System.out.println("Response Code : " + responseCode);

              BufferedReader in = new BufferedReader(
                      new InputStreamReader(con.getInputStream()));
              String inputLine;
              StringBuffer response = new StringBuffer();

              while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
              }
              in.close();

              //print result
              System.out.println(response.toString());

            }
          }
      }

      catch (Exception e) {
         System.out.println("You done messed something up. Fix it.");
      }
   }
}
